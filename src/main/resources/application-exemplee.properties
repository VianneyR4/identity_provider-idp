# Server Configuration
server.port=8080
server.servlet.context-path=/
server.error.include-message=always
server.error.include-binding-errors=always
server.error.include-stacktrace=never
server.error.include-exception=false

# Database Configuration
spring.datasource.url=jdbc:postgresql://localhost:5432/{your-database-name}
spring.datasource.username={your-database-username}
spring.datasource.password={your-database-password}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true

# JSON Configuration
spring.jackson.default-property-inclusion=NON_NULL
spring.jackson.serialization.write-dates-as-timestamps=false
spring.jackson.serialization.fail-on-empty-beans=false

# JWT Configuration
jwt.secret=mySecretKey
jwt.expiration=900000
jwt.refresh-expiration=604800000

# Email Configuration
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username={your-email-username}
spring.mail.password={your-email-password}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.debug=true

# Application Configuration
app.name=Identity Provider
app.version=1.0.0
app.base-url=http://localhost:8080

# LinkedIn OAuth2 Configuration
oauth2.linkedin.client-id={your-linkedin-client-id}
oauth2.linkedin.client-secret={your-linkedin-client-secret}
oauth2.linkedin.redirect-uri=http://localhost:8080/api/oauth2/linkedin/callback

# Google OAuth2 Configuration (Manual - keep for backward compatibility)
oauth2.google.client-id={your-google-client-id}
oauth2.google.client-secret={your-google-client-secret}
oauth2.google.redirect-uri=http://localhost:8080/api/oauth2/google/callback

# Spring Security OAuth2 Client Configuration (Automatic)
spring.security.oauth2.client.registration.google.client-id={your-google-client-id}
spring.security.oauth2.client.registration.google.client-secret={your-google-client-secret}
spring.security.oauth2.client.registration.google.scope=openid,profile,email
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8080/login/oauth2/code/google

# Security Configuration
security.rate-limit.requests-per-minute=60
security.account-lockout.max-attempts=5
security.account-lockout.duration-minutes=15

# Logging Configuration
logging.level.com.example.idp=DEBUG
logging.level.org.springframework.security=DEBUG

# Allow circular references (temporary fix)
spring.main.allow-circular-references=true
